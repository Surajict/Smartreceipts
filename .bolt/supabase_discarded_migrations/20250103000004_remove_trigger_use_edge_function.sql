/*
  # Remove Database Trigger and Use Edge Function Approach
  
  1. Remove the problematic database trigger
  2. Clean up functions that don't work
  3. Use edge functions for embedding generation instead
*/

-- Remove the trigger that's causing issues
DROP TRIGGER IF EXISTS trigger_generate_receipt_embedding ON receipts;

-- Remove the functions that aren't working
DROP FUNCTION IF EXISTS generate_receipt_embedding();
DROP FUNCTION IF EXISTS backfill_receipt_embeddings();

-- Create a simple function to check embedding status
CREATE OR REPLACE FUNCTION get_embedding_status()
RETURNS TABLE (
  total_receipts bigint,
  receipts_with_embeddings bigint,
  receipts_without_embeddings bigint
) AS $$
BEGIN
  RETURN QUERY
  SELECT 
    COUNT(*) as total_receipts,
    COUNT(embedding) as receipts_with_embeddings,
    COUNT(*) - COUNT(embedding) as receipts_without_embeddings
  FROM receipts;
END;
$$ LANGUAGE plpgsql;

-- Grant execute permission
GRANT EXECUTE ON FUNCTION get_embedding_status() TO authenticated;

-- Add a comment explaining the new approach
COMMENT ON COLUMN receipts.embedding IS 'Vector embedding generated by edge function for semantic search';

-- Create an index on the embedding column if it doesn't exist
CREATE INDEX IF NOT EXISTS receipts_embedding_idx ON receipts USING ivfflat (embedding vector_cosine_ops);

-- Add a helpful view for debugging
CREATE OR REPLACE VIEW receipt_embedding_status AS
SELECT 
  id,
  product_description,
  brand_name,
  CASE 
    WHEN embedding IS NOT NULL THEN 'Has Embedding'
    ELSE 'Missing Embedding'
  END as embedding_status,
  created_at
FROM receipts
ORDER BY created_at DESC; 